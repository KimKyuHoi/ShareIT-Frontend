[{"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\index.js":"1","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\App.js":"2","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\Question\\QuestionPage.jsx":"3","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\Error\\Error.jsx":"4","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\main\\Help.jsx":"5","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\main\\Home.jsx":"6","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\main\\Contributor.jsx":"7","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\result\\Result.jsx":"8","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\Question\\Question.jsx":"9","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\service\\VisitUser.jsx":"10","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\service\\ShowResult.jsx":"11","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\Constants\\url.jsx":"12"},{"size":409,"mtime":1698644578416,"results":"13","hashOfConfig":"14"},{"size":807,"mtime":1698644578250,"results":"15","hashOfConfig":"14"},{"size":338,"mtime":1698644578397,"results":"16","hashOfConfig":"14"},{"size":934,"mtime":1698644578391,"results":"17","hashOfConfig":"14"},{"size":3793,"mtime":1698649215748,"results":"18","hashOfConfig":"14"},{"size":4613,"mtime":1698649218150,"results":"19","hashOfConfig":"14"},{"size":4170,"mtime":1698649212496,"results":"20","hashOfConfig":"14"},{"size":9487,"mtime":1698651627925,"results":"21","hashOfConfig":"14"},{"size":9551,"mtime":1698651135948,"results":"22","hashOfConfig":"14"},{"size":453,"mtime":1698644578424,"results":"23","hashOfConfig":"14"},{"size":456,"mtime":1698644578420,"results":"24","hashOfConfig":"14"},{"size":200,"mtime":1698655102177,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"x4z2c8",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\index.js",[],[],["65"],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\App.js",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\Question\\QuestionPage.jsx",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\Error\\Error.jsx",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\main\\Help.jsx",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\main\\Home.jsx",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\main\\Contributor.jsx",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\result\\Result.jsx",["66"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ShowResult from \"../../service/ShowResult\";\r\nimport { useRef } from \"react\";\r\nimport styles from \"./Result.module.css\";\r\nimport frontendTitle from \"../../assets/FrontendTitle.png\";\r\nimport frontendPrinter from \"../../assets/FrontendPrinter.png\";\r\nimport frontendFlag from \"../../assets/FrontendFlag.png\";\r\nimport AITitle from \"../../assets/title_AI.png\";\r\nimport AIPrinter from \"../../assets/printer_AI.png\";\r\nimport AIFlag from \"../../assets/flag_AI.png\";\r\nimport AndroidTitle from \"../../assets/title_Android.png\";\r\nimport AndroidFlag from \"../../assets/flag_android.png\";\r\nimport AndroidPrinter from \"../../assets/printer_android.png\";\r\nimport BackendTitle from \"../../assets/title_backend.png\";\r\nimport BackendFlag from \"../../assets/flag_backend.png\";\r\nimport BackendPrinter from \"../../assets/printer_backend.png\";\r\nimport IOSFlag from \"../../assets/flag_IOS.png\";\r\nimport IOSTitle from \"../../assets/title_IOS.png\";\r\nimport IOSPrinter from \"../../assets/printer_IOS.png\";\r\nimport BigDataFlag from \"../../assets/flag_BigData.png\";\r\nimport BigDataTitle from \"../../assets/title_BigData.png\";\r\nimport BigDataPrinter from \"../../assets/printer_bigData.png\";\r\nimport WebDesignFlag from \"../../assets/flag_web_design.png\";\r\nimport WebDesignTitle from \"../../assets/title_web_design.png\";\r\nimport WebDesignPrinter from \"../../assets/printer_web_design.png\";\r\nimport GraphicFlag from \"../../assets/flag_graphic.png\";\r\nimport GraphicTitle from \"../../assets/title_Graphic.png\";\r\nimport GraphicPrinter from \"../../assets/printer_Graphic.png\";\r\nimport GameFlag from \"../../assets/flag_Game.png\";\r\nimport GameTitle from \"../../assets/title_Game.png\";\r\nimport GamePrinter from \"../../assets/printer_Game.png\";\r\nimport SecurityFlag from \"../../assets/flag_Security.png\";\r\nimport SecurityTitle from \"../../assets/title_Security.png\";\r\nimport SecurityPrinter from \"../../assets/printer_security.png\";\r\nimport NetworkFlag from \"../../assets/flag_network.png\";\r\nimport NetworkTitle from \"../../assets/title_Network.png\";\r\nimport NetworkPrinter from \"../../assets/printer_network.png\";\r\nimport EmbededFlag from \"../../assets/flag_embedded.png\";\r\nimport EmbededTitle from \"../../assets/title_Embedded.png\";\r\nimport EmbededPrinter from \"../../assets/printer_embedded.png\";\r\nimport BlockChainFlag from \"../../assets/flag_blockChain.png\";\r\nimport BlockChainTitle from \"../../assets/title_blockChain.png\";\r\nimport BlockChainPrinter from \"../../assets/printer_blockChain.png\";\r\nimport PlannerTitle from \"../../assets/title_planner.png\";\r\nimport PlannerPrinter from \"../../assets/printer_planner.png\";\r\nimport PlannerFlag from \"../../assets/flag_planner.png\";\r\nimport devOpsFlag from \"../../assets/flag_devops.png\";\r\nimport devOpsTitle from \"../../assets/title_devOps.png\";\r\nimport devOpsPrinter from \"../../assets/printer_devOps.png\";\r\nimport fullstackTitle from \"../../assets/title_full_stack.png\";\r\nimport fullstackPrinter from \"../../assets/printer_full_stack.png\";\r\nimport fullstackFlag from \"../../assets/flag_full_stack.png\";\r\n\r\nimport BackgroundImage from \"../../assets/background.png\";\r\nimport snsBtn from \"../../assets/SNSBtn.png\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BASE_URL, BASE_URL_FRONT } from \"../../Constants/url\";\r\n\r\nconst DUMMY_DATA = [\r\n  {\r\n    id: \"1\",\r\n    title: frontendTitle,\r\n    printer: frontendPrinter,\r\n    flags: frontendFlag,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: AITitle,\r\n    printer: AIPrinter,\r\n    flags: AIFlag,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: AndroidTitle,\r\n    printer: AndroidPrinter,\r\n    flags: AndroidFlag,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    title: BackendTitle,\r\n    printer: BackendPrinter,\r\n    flags: BackendFlag,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    title: IOSTitle,\r\n    printer: IOSPrinter,\r\n    flags: IOSFlag,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    title: BigDataTitle,\r\n    printer: BigDataPrinter,\r\n    flags: BigDataFlag,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    title: fullstackTitle,\r\n    printer: fullstackPrinter,\r\n    flags: fullstackFlag,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    title: WebDesignTitle,\r\n    printer: WebDesignPrinter,\r\n    flags: WebDesignFlag,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    title: GraphicTitle,\r\n    printer: GraphicPrinter,\r\n    flags: GraphicFlag,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    title: GameTitle,\r\n    printer: GamePrinter,\r\n    flags: GameFlag,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    title: SecurityTitle,\r\n    printer: SecurityPrinter,\r\n    flags: SecurityFlag,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    title: NetworkTitle,\r\n    printer: NetworkPrinter,\r\n    flags: NetworkFlag,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    title: EmbededTitle,\r\n    printer: EmbededPrinter,\r\n    flags: EmbededFlag,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    title: BlockChainTitle,\r\n    printer: BlockChainPrinter,\r\n    flags: BlockChainFlag,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    title: PlannerTitle,\r\n    printer: PlannerPrinter,\r\n    flags: PlannerFlag,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    title: devOpsTitle,\r\n    printer: devOpsPrinter,\r\n    flags: devOpsFlag,\r\n  },\r\n];\r\n\r\nconst Result = () => {\r\n  const [tenType, setTenType] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    ShowResult()\r\n      .then((data) => {\r\n        setTenType(data.tenType);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error.response.data);\r\n        throw new Error(error.response.data.message);\r\n      });\r\n  }, []);\r\n\r\n  const onClickBack = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  let selectedData;\r\n\r\n  if (tenType === \"INTP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"2\"); // 예시에 따라 선택한 값 설정\r\n  } else if (tenType === \"INTJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"7\");\r\n  } else if (tenType === \"INFP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"8\");\r\n  } else if (tenType === \"INFJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"11\");\r\n  } else if (tenType === \"ISTP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"14\");\r\n  } else if (tenType === \"ISTJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"4\");\r\n  } else if (tenType === \"ISFP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"12\");\r\n  } else if (tenType === \"ISFJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"6\");\r\n  } else if (tenType === \"ENTP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"5\");\r\n  } else if (tenType === \"ENTJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"10\");\r\n  } else if (tenType === \"ENFP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"9\");\r\n  } else if (tenType === \"ENFJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"1\");\r\n  } else if (tenType === \"ESTP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"3\");\r\n  } else if (tenType === \"ESTJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"16\");\r\n  } else if (tenType === \"ESFP\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"13\");\r\n  } else if (tenType === \"ESFJ\") {\r\n    selectedData = DUMMY_DATA.find((data) => data.id === \"15\");\r\n  }\r\n\r\n  if (!selectedData) {\r\n    selectedData = DUMMY_DATA[0]; // 예를 들어 기본값으로 첫 번째 데이터 항목을 선택\r\n  }\r\n\r\n  const urlRef = useRef(`${BASE_URL_FRONT}`);\r\n\r\n  const copyToClipboard = () => {\r\n    if (urlRef.current) {\r\n      urlRef.current.select();\r\n      document.execCommand(\"copy\");\r\n      urlRef.current.blur(); // 선택 해제\r\n      alert(\"URL이 복사되었습니다. 링크를 공유해보세요!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 1.6 }}\r\n      className={styles.container}\r\n    >\r\n      <div\r\n        className={styles.backGroundImg}\r\n        style={{ backgroundImage: `url(${BackgroundImage})` }}\r\n      />\r\n      <header className={styles.titleBox}>\r\n        <img\r\n          src={selectedData.title}\r\n          alt={selectedData.title}\r\n          className={styles.title}\r\n          onClick={onClickBack}\r\n        />\r\n        {/* <img key={images[0]} src={images[0]} alt={`제목입니다.`} onClick={onClickBack} className={styles.title} /> */}\r\n      </header>\r\n      <main className={styles.contentBox}>\r\n        <img\r\n          src={selectedData.printer}\r\n          alt={selectedData.title}\r\n          className={styles.printer}\r\n        />\r\n        {/* <img key={images[1]} src={images[1]} alt={`프린터기입니다.`} className={styles.printer} onClick={onClickUrl} /> */}\r\n        <div className={styles.etcBox}>\r\n          <img\r\n            src={selectedData.flags}\r\n            alt={selectedData.title}\r\n            className={styles.flags}\r\n          />\r\n          {/* <img key={images[1]} src={images[2]} alt={`프린터기입니다.`} className={styles.printer} /> */}\r\n          <img\r\n            src={snsBtn}\r\n            alt=\"공유 이미지입니다.\"\r\n            className={styles.sns}\r\n            onClick={copyToClipboard}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            ref={urlRef}\r\n            defaultValue=\"http://223.130.134.83\" // 클립보드에 복사할 URL 설정\r\n            readOnly\r\n            style={{ position: \"absolute\", left: \"-9999px\" }}\r\n          />\r\n        </div>\r\n      </main>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\components\\Question\\Question.jsx",["67","68"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BASE_URL } from \"../../Constants/url\";\r\nimport \"./question2.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport BackgroundImage from \"../../assets/MainBackground.png\";\r\nimport {\r\n  faArrowLeft,\r\n  faArrowRight,\r\n  faArrowsRotate,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n/* 결과 모달 창 */\r\nfunction Modal({ showModal, setShowModal, result }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleNavigate = () => {\r\n    setShowModal(false);\r\n    navigate(\"/result\");\r\n  };\r\n\r\n  if (!showModal) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <button onClick={handleNavigate}>{result}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* 질문지 창 */\r\nexport default function SQuestion() {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [stage, setStage] = useState(1);\r\n  const barProgressWidth = (100 / 12) * stage;\r\n\r\n  const [walking, setWalking] = useState(false);\r\n  const [motion, setMotion] = useState(false);\r\n  const [position, setPosition] = useState(0);\r\n\r\n  const [Lposition, setLposition] = useState(0);\r\n  const [Rposition, setRposition] = useState(0);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const lionRef = useRef(null);\r\n  const wrapperRef = useRef(null);\r\n\r\n  const [urlQuestion, setUrlQuestion] = useState(\"\");\r\n  const [urlAnswer, setUrlAnswer] = useState(\"\");\r\n  const [urlAnswer2, setUrlAnswer2] = useState(\"\");\r\n  const [urlAnswerIdL, setUrlAnswerIdL] = useState();\r\n  const [urlAnswerIdR, setUrlAnswerIdR] = useState();\r\n  const [result, setResult] = useState(\"null\");\r\n\r\n  /* API 통신 코드가 필요한 부분 */\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${BASE_URL}/question/${stage}`, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setUrlQuestion(response.data.questionContent);\r\n        setUrlAnswer(response.data.answerContent1);\r\n        setUrlAnswer2(response.data.answerContent2);\r\n        setUrlAnswerIdL(response.data.answerId1);\r\n        setUrlAnswerIdR(response.data.answerId2);\r\n      })\r\n      .catch((res) => {\r\n        throw new Error(\"Network\");\r\n      });\r\n  }, [stage]);\r\n\r\n  const toggleWalking = (direction) => {\r\n    if (direction === \"Right\") {\r\n      console.log(\"오른쪽이동\");\r\n      /* API 통신 코드가 필요한 부분 */\r\n      axios\r\n        .get(`${BASE_URL}/answer/1/${urlAnswerIdR}`, { withCredentials: true })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        });\r\n\r\n      setWalking((prevWalking) => 2);\r\n    } else if (direction === \"Left\") {\r\n      console.log(\"왼쪽이동\");\r\n      /* API 통신 코드가 필요한 부분 */\r\n      axios\r\n        .get(`${BASE_URL}/answer/1/${urlAnswerIdL}`, { withCredentials: true })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        });\r\n\r\n      setWalking((prevWalking) => 1);\r\n    }\r\n  };\r\n\r\n  /*사자의 위치 설정 함수*/\r\n  useEffect(() => {\r\n    if (walking === 2 && position < Rposition) {\r\n      const interval = setInterval(() => {\r\n        setMotion((prevMotion) => !prevMotion);\r\n        setPosition((prevPosition) => prevPosition + 10);\r\n      }, 100);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    } else if (walking === 1 && position > Lposition) {\r\n      const interval = setInterval(() => {\r\n        setMotion((prevMotion) => !prevMotion);\r\n        setPosition((prevPosition) => prevPosition - 10);\r\n      }, 100);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [walking, position]);\r\n\r\n  useEffect(() => {\r\n    const lionElement = lionRef.current;\r\n    const wrapperElement = wrapperRef.current;\r\n    if (lionElement && position === 0) {\r\n      const lionRect = lionElement.getBoundingClientRect();\r\n      const wrapperRect = wrapperElement.getBoundingClientRect(); // 수정된 부분\r\n      const initialPosition = wrapperRect.width / 2 - lionRect.width / 2;\r\n      console.log(\"Lion의 초기 위치:\", initialPosition);\r\n      setPosition(initialPosition);\r\n      setLposition(initialPosition - 100);\r\n      setRposition(initialPosition + 100);\r\n    }\r\n  }, [position]);\r\n\r\n  const handleStage = (event) => {\r\n    console.log(stage);\r\n    event.stopPropagation();\r\n    setStage((prevStage) => (prevStage < 12 ? prevStage + 1 : prevStage));\r\n    if (stage === 12) {\r\n      console.log(\"modal\");\r\n      setShowModal(true);\r\n      axios\r\n        .get(`${BASE_URL}/result/1`, { withCredentials: true })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setResult(res.data.tenType);\r\n          console.log(result);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleImageClick = (event) => {\r\n    console.log(\"이미지클릭됨\");\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handleClick = (index) => {\r\n    if (isClicked) {\r\n      setIsClicked(false); // 초기 상태 false 일 땐 초기 상태 이미지 src\r\n    } else {\r\n      setIsClicked(true); // true일 땐 변경될 이미지 src\r\n    }\r\n  };\r\n\r\n  const onClickBack = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const onClickReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"backGroundImg\"\r\n        style={{ backgroundImage: `url(${BackgroundImage})` }}\r\n      >\r\n        <div className=\"Question-background\">\r\n          <div className=\"Question-wrapper\" ref={wrapperRef}>\r\n            <div className=\"Question-header  Question-background-header\">\r\n              <div className=\"header-page-background\">\r\n                <img\r\n                  className=\"logo\"\r\n                  alt=\"사자이미지입니다.\"\r\n                  src=\"./img/Lion.png\"\r\n                />\r\n                <span className=\"header-text content-text\">Share IT</span>\r\n              </div>\r\n              <div className=\"header-container\">\r\n                <FontAwesomeIcon icon={faArrowLeft} onClick={onClickBack} />\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n                <FontAwesomeIcon\r\n                  icon={faArrowsRotate}\r\n                  onClick={onClickReload}\r\n                />\r\n                <div className=\"header-link-background\">\r\n                  <span className=\"header-text link content-text\">\r\n                    http://www.ShareIT.com\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"Question-content Question-background-content\">\r\n              {showModal && (\r\n                <Modal\r\n                  showModal={showModal}\r\n                  setShowModal={setShowModal}\r\n                  result={result}\r\n                />\r\n              )}\r\n              <span className=\"Question-progress-text content-text\">\r\n                {stage}\r\n              </span>\r\n              <div className=\"bar\">\r\n                <div\r\n                  className=\"bar-progress\"\r\n                  style={{ width: `${barProgressWidth}%` }}\r\n                />\r\n              </div>\r\n              <span className=\"Question-text content-text\">\r\n                {urlQuestion || \"로딩중\"}\r\n              </span>\r\n\r\n              <button\r\n                className=\"Question-answer-left\"\r\n                onClick={(event) => {\r\n                  handleStage(event);\r\n                  toggleWalking(\"Left\");\r\n                }}\r\n              >\r\n                <img\r\n                  className=\" Question-answer-leftimg\"\r\n                  src=\"./img/Question-answer-left.png\"\r\n                  alt=\"left\"\r\n                  onClick={(event) => handleImageClick(event)}\r\n                ></img>\r\n                <span className=\"Question-answer-text-left content-text\">\r\n                  {\" \"}\r\n                  {urlAnswer}\r\n                </span>\r\n              </button>\r\n              <button\r\n                className=\"Question-answer-right\"\r\n                onClick={(event) => {\r\n                  handleStage(event);\r\n                  toggleWalking(\"Right\");\r\n                }}\r\n              >\r\n                <img\r\n                  className=\" Question-answer-leftimg\"\r\n                  src=\"./img/Question-answer-right.png \"\r\n                  alt=\"right\"\r\n                  onClick={(event) => handleImageClick(event)}\r\n                ></img>\r\n                <span className=\"Question-answer-text-right content-text\">\r\n                  {urlAnswer2}\r\n                </span>\r\n              </button>\r\n              <img\r\n                ref={lionRef}\r\n                className={`Lion image ${motion ? \"walking\" : \"\"}`}\r\n                src={\r\n                  walking === 1\r\n                    ? motion\r\n                      ? \"./img/likelion_lion_runLeft.png\"\r\n                      : \"./img/likelion_lion_basicL.gif\"\r\n                    : walking === 2 && motion\r\n                    ? \"./img/likelion_lion_runRight.png\"\r\n                    : \"./img/likelion_lion_basicR.gif\"\r\n                }\r\n                alt={\r\n                  motion\r\n                    ? walking === \"Left\"\r\n                      ? \"walking left\"\r\n                      : \"walking right\"\r\n                    : \"standing\"\r\n                }\r\n                style={{ left: `${position}px` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\service\\VisitUser.jsx",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\service\\ShowResult.jsx",[],[],"C:\\1030share\\ShareIT-Frontend\\shareit_frontend\\src\\Constants\\url.jsx",[],[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":59,"column":10,"nodeType":"73","messageId":"74","endLine":59,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":123,"column":6,"nodeType":"77","endLine":123,"endColumn":25,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":161,"column":9,"nodeType":"73","messageId":"74","endLine":161,"endColumn":20},"no-new-object",["80"],"no-unused-vars","'BASE_URL' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Lposition' and 'Rposition'. Either include them or remove the dependency array.","ArrayExpression",["81"],"'handleClick' is assigned a value but never used.","no-object-constructor",{"desc":"82","fix":"83"},"Update the dependencies array to be: [walking, position, Rposition, Lposition]",{"range":"84","text":"85"},[3667,3686],"[walking, position, Rposition, Lposition]"]