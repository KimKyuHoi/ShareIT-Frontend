{"ast":null,"code":"import _classCallCheck from \"C:/Users/k546k/Desktop/\\uBA4B\\uC7C1\\uC774\\uC0AC\\uC790/\\uC250\\uC5B4\\uC787/shareit_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/k546k/Desktop/\\uBA4B\\uC7C1\\uC774\\uC0AC\\uC790/\\uC250\\uC5B4\\uC787/shareit_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/k546k/Desktop/\\uBA4B\\uC7C1\\uC774\\uC0AC\\uC790/\\uC250\\uC5B4\\uC787/shareit_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/k546k/Desktop/\\uBA4B\\uC7C1\\uC774\\uC0AC\\uC790/\\uC250\\uC5B4\\uC787/shareit_frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\nvar thresholdNames = {\n  some: 0,\n  all: 1\n};\nvar InViewFeature = /*#__PURE__*/function (_Feature) {\n  _inherits(InViewFeature, _Feature);\n  var _super = _createSuper(InViewFeature);\n  function InViewFeature() {\n    var _this;\n    _classCallCheck(this, InViewFeature);\n    _this = _super.apply(this, arguments);\n    _this.hasEnteredView = false;\n    _this.isInView = false;\n    return _this;\n  }\n  _createClass(InViewFeature, [{\n    key: \"startObserver\",\n    value: function startObserver() {\n      var _this2 = this;\n      this.unmount();\n      var _this$node$getProps = this.node.getProps(),\n        _this$node$getProps$v = _this$node$getProps.viewport,\n        viewport = _this$node$getProps$v === void 0 ? {} : _this$node$getProps$v;\n      var root = viewport.root,\n        rootMargin = viewport.margin,\n        _viewport$amount = viewport.amount,\n        amount = _viewport$amount === void 0 ? \"some\" : _viewport$amount,\n        once = viewport.once;\n      var options = {\n        root: root ? root.current : undefined,\n        rootMargin: rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholdNames[amount]\n      };\n      var onIntersectionUpdate = function onIntersectionUpdate(entry) {\n        var isIntersecting = entry.isIntersecting;\n        /**\r\n         * If there's been no change in the viewport state, early return.\r\n         */\n        if (_this2.isInView === isIntersecting) return;\n        _this2.isInView = isIntersecting;\n        /**\r\n         * Handle hasEnteredView. If this is only meant to run once, and\r\n         * element isn't visible, early return. Otherwise set hasEnteredView to true.\r\n         */\n        if (once && !isIntersecting && _this2.hasEnteredView) {\n          return;\n        } else if (isIntersecting) {\n          _this2.hasEnteredView = true;\n        }\n        if (_this2.node.animationState) {\n          _this2.node.animationState.setActive(\"whileInView\", isIntersecting);\n        }\n        /**\r\n         * Use the latest committed props rather than the ones in scope\r\n         * when this observer is created\r\n         */\n        var _this2$node$getProps = _this2.node.getProps(),\n          onViewportEnter = _this2$node$getProps.onViewportEnter,\n          onViewportLeave = _this2$node$getProps.onViewportLeave;\n        var callback = isIntersecting ? onViewportEnter : onViewportLeave;\n        callback && callback(entry);\n      };\n      return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      this.startObserver();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (typeof IntersectionObserver === \"undefined\") return;\n      var _this$node = this.node,\n        props = _this$node.props,\n        prevProps = _this$node.prevProps;\n      var hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n      if (hasOptionsChanged) {\n        this.startObserver();\n      }\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n  return InViewFeature;\n}(Feature);\nfunction hasViewportOptionChanged(_ref) {\n  var _ref$viewport = _ref.viewport,\n    viewport = _ref$viewport === void 0 ? {} : _ref$viewport;\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref2$viewport = _ref2.viewport,\n    prevViewport = _ref2$viewport === void 0 ? {} : _ref2$viewport;\n  return function (name) {\n    return viewport[name] !== prevViewport[name];\n  };\n}\nexport { InViewFeature };","map":{"version":3,"names":["Feature","observeIntersection","thresholdNames","some","all","InViewFeature","_Feature","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","hasEnteredView","isInView","_createClass","key","value","startObserver","_this2","unmount","_this$node$getProps","node","getProps","_this$node$getProps$v","viewport","root","rootMargin","margin","_viewport$amount","amount","once","options","current","undefined","threshold","onIntersectionUpdate","entry","isIntersecting","animationState","setActive","_this2$node$getProps","onViewportEnter","onViewportLeave","callback","mount","update","IntersectionObserver","_this$node","props","prevProps","hasOptionsChanged","hasViewportOptionChanged","_ref","_ref$viewport","_ref2","length","_ref2$viewport","prevViewport","name"],"sources":["C:/Users/k546k/Desktop/멋쟁이사자/쉐어잇/shareit_frontend/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs"],"sourcesContent":["import { Feature } from '../Feature.mjs';\r\nimport { observeIntersection } from './observers.mjs';\r\n\r\nconst thresholdNames = {\r\n    some: 0,\r\n    all: 1,\r\n};\r\nclass InViewFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hasEnteredView = false;\r\n        this.isInView = false;\r\n    }\r\n    startObserver() {\r\n        this.unmount();\r\n        const { viewport = {} } = this.node.getProps();\r\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\r\n        const options = {\r\n            root: root ? root.current : undefined,\r\n            rootMargin,\r\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\r\n        };\r\n        const onIntersectionUpdate = (entry) => {\r\n            const { isIntersecting } = entry;\r\n            /**\r\n             * If there's been no change in the viewport state, early return.\r\n             */\r\n            if (this.isInView === isIntersecting)\r\n                return;\r\n            this.isInView = isIntersecting;\r\n            /**\r\n             * Handle hasEnteredView. If this is only meant to run once, and\r\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\r\n             */\r\n            if (once && !isIntersecting && this.hasEnteredView) {\r\n                return;\r\n            }\r\n            else if (isIntersecting) {\r\n                this.hasEnteredView = true;\r\n            }\r\n            if (this.node.animationState) {\r\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\r\n            }\r\n            /**\r\n             * Use the latest committed props rather than the ones in scope\r\n             * when this observer is created\r\n             */\r\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\r\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\r\n            callback && callback(entry);\r\n        };\r\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\r\n    }\r\n    mount() {\r\n        this.startObserver();\r\n    }\r\n    update() {\r\n        if (typeof IntersectionObserver === \"undefined\")\r\n            return;\r\n        const { props, prevProps } = this.node;\r\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\r\n        if (hasOptionsChanged) {\r\n            this.startObserver();\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\r\n    return (name) => viewport[name] !== prevViewport[name];\r\n}\r\n\r\nexport { InViewFeature };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}