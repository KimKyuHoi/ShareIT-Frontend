{"ast":null,"code":"/*\r\n  Value in range from progress\r\n\r\n  Given a lower limit and an upper limit, we return the value within\r\n  that range as expressed by progress (usually a number from 0 to 1)\r\n\r\n  So progress = 0.5 would change\r\n\r\n  from -------- to\r\n\r\n  to\r\n\r\n  from ---- to\r\n\r\n  E.g. from = 10, to = 20, progress = 0.5 => 15\r\n\r\n  @param [number]: Lower limit of range\r\n  @param [number]: Upper limit of range\r\n  @param [number]: The progress between lower and upper limits expressed 0-1\r\n  @return [number]: Value as calculated from progress within range (not limited within range)\r\n*/\nvar mix = function mix(from, to, progress) {\n  return -progress * from + progress * to + from;\n};\nexport { mix };","map":{"version":3,"names":["mix","from","to","progress"],"sources":["C:/Users/k546k/Desktop/멋쟁이사자/쉐어잇/shareit_frontend/node_modules/framer-motion/dist/es/utils/mix.mjs"],"sourcesContent":["/*\r\n  Value in range from progress\r\n\r\n  Given a lower limit and an upper limit, we return the value within\r\n  that range as expressed by progress (usually a number from 0 to 1)\r\n\r\n  So progress = 0.5 would change\r\n\r\n  from -------- to\r\n\r\n  to\r\n\r\n  from ---- to\r\n\r\n  E.g. from = 10, to = 20, progress = 0.5 => 15\r\n\r\n  @param [number]: Lower limit of range\r\n  @param [number]: Upper limit of range\r\n  @param [number]: The progress between lower and upper limits expressed 0-1\r\n  @return [number]: Value as calculated from progress within range (not limited within range)\r\n*/\r\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\r\n\r\nexport { mix };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,GAAG,GAAG,SAANA,GAAGA,CAAIC,IAAI,EAAEC,EAAE,EAAEC,QAAQ;EAAA,OAAK,CAACA,QAAQ,GAAGF,IAAI,GAAGE,QAAQ,GAAGD,EAAE,GAAGD,IAAI;AAAA;AAE3E,SAASD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}