{"ast":null,"code":"import _defineProperty from \"C:/Users/k546k/Desktop/\\uBA4B\\uC7C1\\uC774\\uC0AC\\uC790/\\uC250\\uC5B4\\uC787/shareit_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/k546k/Desktop/\\uBA4B\\uC7C1\\uC774\\uC0AC\\uC790/\\uC250\\uC5B4\\uC787/shareit_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\r\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\r\n * but false if a number or multiple colors\r\n */\nvar isColorString = function isColorString(type, testProp) {\n  return function (v) {\n    return Boolean(isString(v) && singleColorRegex.test(v) && v.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v, testProp));\n  };\n};\nvar splitColor = function splitColor(aName, bName, cName) {\n  return function (v) {\n    var _ref;\n    if (!isString(v)) return v;\n    var _v$match = v.match(floatRegex),\n      _v$match2 = _slicedToArray(_v$match, 4),\n      a = _v$match2[0],\n      b = _v$match2[1],\n      c = _v$match2[2],\n      alpha = _v$match2[3];\n    return _ref = {}, _defineProperty(_ref, aName, parseFloat(a)), _defineProperty(_ref, bName, parseFloat(b)), _defineProperty(_ref, cName, parseFloat(c)), _defineProperty(_ref, \"alpha\", alpha !== undefined ? parseFloat(alpha) : 1), _ref;\n  };\n};\nexport { isColorString, splitColor };","map":{"version":3,"names":["isString","singleColorRegex","floatRegex","isColorString","type","testProp","v","Boolean","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","_ref","_v$match","match","_v$match2","_slicedToArray","a","b","c","alpha","_defineProperty","parseFloat","undefined"],"sources":["C:/Users/k546k/Desktop/멋쟁이사자/쉐어잇/shareit_frontend/node_modules/framer-motion/dist/es/value/types/color/utils.mjs"],"sourcesContent":["import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\r\n\r\n/**\r\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\r\n * but false if a number or multiple colors\r\n */\r\nconst isColorString = (type, testProp) => (v) => {\r\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\r\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\r\n};\r\nconst splitColor = (aName, bName, cName) => (v) => {\r\n    if (!isString(v))\r\n        return v;\r\n    const [a, b, c, alpha] = v.match(floatRegex);\r\n    return {\r\n        [aName]: parseFloat(a),\r\n        [bName]: parseFloat(b),\r\n        [cName]: parseFloat(c),\r\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\r\n    };\r\n};\r\n\r\nexport { isColorString, splitColor };\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,cAAc;;AAErE;AACA;AACA;AACA;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAI,EAAEC,QAAQ;EAAA,OAAK,UAACC,CAAC,EAAK;IAC7C,OAAOC,OAAO,CAAEP,QAAQ,CAACM,CAAC,CAAC,IAAIL,gBAAgB,CAACO,IAAI,CAACF,CAAC,CAAC,IAAIA,CAAC,CAACG,UAAU,CAACL,IAAI,CAAC,IACxEC,QAAQ,IAAIK,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAED,QAAQ,CAAE,CAAC;EACxE,CAAC;AAAA;AACD,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAEC,KAAK,EAAEC,KAAK;EAAA,OAAK,UAACX,CAAC,EAAK;IAAA,IAAAY,IAAA;IAC/C,IAAI,CAAClB,QAAQ,CAACM,CAAC,CAAC,EACZ,OAAOA,CAAC;IACZ,IAAAa,QAAA,GAAyBb,CAAC,CAACc,KAAK,CAAClB,UAAU,CAAC;MAAAmB,SAAA,GAAAC,cAAA,CAAAH,QAAA;MAArCI,CAAC,GAAAF,SAAA;MAAEG,CAAC,GAAAH,SAAA;MAAEI,CAAC,GAAAJ,SAAA;MAAEK,KAAK,GAAAL,SAAA;IACrB,OAAAH,IAAA,OAAAS,eAAA,CAAAT,IAAA,EACKH,KAAK,EAAGa,UAAU,CAACL,CAAC,CAAC,GAAAI,eAAA,CAAAT,IAAA,EACrBF,KAAK,EAAGY,UAAU,CAACJ,CAAC,CAAC,GAAAG,eAAA,CAAAT,IAAA,EACrBD,KAAK,EAAGW,UAAU,CAACH,CAAC,CAAC,GAAAE,eAAA,CAAAT,IAAA,WACfQ,KAAK,KAAKG,SAAS,GAAGD,UAAU,CAACF,KAAK,CAAC,GAAG,CAAC,GAAAR,IAAA;EAE1D,CAAC;AAAA;AAED,SAASf,aAAa,EAAEW,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}