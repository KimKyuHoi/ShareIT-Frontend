{"ast":null,"code":"import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n  var _useContext = useContext(MotionContext),\n    parent = _useContext.visualElement;\n  var lazyContext = useContext(LazyContext);\n  var presenceContext = useContext(PresenceContext);\n  var reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n  var visualElementRef = useRef();\n  /**\r\n   * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\r\n   */\n  createVisualElement = createVisualElement || lazyContext.renderer;\n  if (!visualElementRef.current && createVisualElement) {\n    visualElementRef.current = createVisualElement(Component, {\n      visualState: visualState,\n      parent: parent,\n      props: props,\n      presenceContext: presenceContext,\n      blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,\n      reducedMotionConfig: reducedMotionConfig\n    });\n  }\n  var visualElement = visualElementRef.current;\n  useInsertionEffect(function () {\n    visualElement && visualElement.update(props, presenceContext);\n  });\n  useIsomorphicLayoutEffect(function () {\n    visualElement && visualElement.render();\n  });\n  useEffect(function () {\n    visualElement && visualElement.updateFeatures();\n  });\n  /**\r\n   * Ideally this function would always run in a useEffect.\r\n   *\r\n   * However, if we have optimised appear animations to handoff from,\r\n   * it needs to happen synchronously to ensure there's no flash of\r\n   * incorrect styles in the event of a hydration error.\r\n   *\r\n   * So if we detect a situtation where optimised appear animations\r\n   * are running, we use useLayoutEffect to trigger animations.\r\n   */\n  var useAnimateChangesEffect = window.HandoffAppearAnimations ? useIsomorphicLayoutEffect : useEffect;\n  useAnimateChangesEffect(function () {\n    if (visualElement && visualElement.animationState) {\n      visualElement.animationState.animateChanges();\n    }\n  });\n  return visualElement;\n}\nexport { useVisualElement };","map":{"version":3,"names":["useContext","useRef","useInsertionEffect","useEffect","PresenceContext","MotionContext","useIsomorphicLayoutEffect","LazyContext","MotionConfigContext","useVisualElement","Component","visualState","props","createVisualElement","_useContext","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","reducedMotion","visualElementRef","renderer","current","blockInitialAnimation","initial","update","render","updateFeatures","useAnimateChangesEffect","window","HandoffAppearAnimations","animationState","animateChanges"],"sources":["C:/Users/k546k/Desktop/멋쟁이사자/쉐어잇/shareit_frontend/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs"],"sourcesContent":["import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\nimport { LazyContext } from '../../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\n\r\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\r\n    const { visualElement: parent } = useContext(MotionContext);\r\n    const lazyContext = useContext(LazyContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\r\n    const visualElementRef = useRef();\r\n    /**\r\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\r\n     */\r\n    createVisualElement = createVisualElement || lazyContext.renderer;\r\n    if (!visualElementRef.current && createVisualElement) {\r\n        visualElementRef.current = createVisualElement(Component, {\r\n            visualState,\r\n            parent,\r\n            props,\r\n            presenceContext,\r\n            blockInitialAnimation: presenceContext\r\n                ? presenceContext.initial === false\r\n                : false,\r\n            reducedMotionConfig,\r\n        });\r\n    }\r\n    const visualElement = visualElementRef.current;\r\n    useInsertionEffect(() => {\r\n        visualElement && visualElement.update(props, presenceContext);\r\n    });\r\n    useIsomorphicLayoutEffect(() => {\r\n        visualElement && visualElement.render();\r\n    });\r\n    useEffect(() => {\r\n        visualElement && visualElement.updateFeatures();\r\n    });\r\n    /**\r\n     * Ideally this function would always run in a useEffect.\r\n     *\r\n     * However, if we have optimised appear animations to handoff from,\r\n     * it needs to happen synchronously to ensure there's no flash of\r\n     * incorrect styles in the event of a hydration error.\r\n     *\r\n     * So if we detect a situtation where optimised appear animations\r\n     * are running, we use useLayoutEffect to trigger animations.\r\n     */\r\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\r\n        ? useIsomorphicLayoutEffect\r\n        : useEffect;\r\n    useAnimateChangesEffect(() => {\r\n        if (visualElement && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n    });\r\n    return visualElement;\r\n}\r\n\r\nexport { useVisualElement };\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,kBAAkB,EAAEC,SAAS,QAAQ,OAAO;AACzE,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,aAAa,QAAQ,uCAAuC;AACrE,SAASC,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,mBAAmB,QAAQ,uCAAuC;AAE3E,SAASC,gBAAgBA,CAACC,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAEC,mBAAmB,EAAE;EAC1E,IAAAC,WAAA,GAAkCd,UAAU,CAACK,aAAa,CAAC;IAApCU,MAAM,GAAAD,WAAA,CAArBE,aAAa;EACrB,IAAMC,WAAW,GAAGjB,UAAU,CAACO,WAAW,CAAC;EAC3C,IAAMW,eAAe,GAAGlB,UAAU,CAACI,eAAe,CAAC;EACnD,IAAMe,mBAAmB,GAAGnB,UAAU,CAACQ,mBAAmB,CAAC,CAACY,aAAa;EACzE,IAAMC,gBAAgB,GAAGpB,MAAM,CAAC,CAAC;EACjC;AACJ;AACA;EACIY,mBAAmB,GAAGA,mBAAmB,IAAII,WAAW,CAACK,QAAQ;EACjE,IAAI,CAACD,gBAAgB,CAACE,OAAO,IAAIV,mBAAmB,EAAE;IAClDQ,gBAAgB,CAACE,OAAO,GAAGV,mBAAmB,CAACH,SAAS,EAAE;MACtDC,WAAW,EAAXA,WAAW;MACXI,MAAM,EAANA,MAAM;MACNH,KAAK,EAALA,KAAK;MACLM,eAAe,EAAfA,eAAe;MACfM,qBAAqB,EAAEN,eAAe,GAChCA,eAAe,CAACO,OAAO,KAAK,KAAK,GACjC,KAAK;MACXN,mBAAmB,EAAnBA;IACJ,CAAC,CAAC;EACN;EACA,IAAMH,aAAa,GAAGK,gBAAgB,CAACE,OAAO;EAC9CrB,kBAAkB,CAAC,YAAM;IACrBc,aAAa,IAAIA,aAAa,CAACU,MAAM,CAACd,KAAK,EAAEM,eAAe,CAAC;EACjE,CAAC,CAAC;EACFZ,yBAAyB,CAAC,YAAM;IAC5BU,aAAa,IAAIA,aAAa,CAACW,MAAM,CAAC,CAAC;EAC3C,CAAC,CAAC;EACFxB,SAAS,CAAC,YAAM;IACZa,aAAa,IAAIA,aAAa,CAACY,cAAc,CAAC,CAAC;EACnD,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAMC,uBAAuB,GAAGC,MAAM,CAACC,uBAAuB,GACxDzB,yBAAyB,GACzBH,SAAS;EACf0B,uBAAuB,CAAC,YAAM;IAC1B,IAAIb,aAAa,IAAIA,aAAa,CAACgB,cAAc,EAAE;MAC/ChB,aAAa,CAACgB,cAAc,CAACC,cAAc,CAAC,CAAC;IACjD;EACJ,CAAC,CAAC;EACF,OAAOjB,aAAa;AACxB;AAEA,SAASP,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}