{"ast":null,"code":"import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var style = state.style,\n    vars = state.vars,\n    transform = state.transform,\n    transformOrigin = state.transformOrigin;\n  // Track whether we encounter any transform or transformOrigin values.\n  var hasTransform = false;\n  var hasTransformOrigin = false;\n  // Does the calculated transform essentially equal \"none\"?\n  var transformIsNone = true;\n  /**\r\n   * Loop over all our latest animated values and decide whether to handle them\r\n   * as a style or CSS variable.\r\n   *\r\n   * Transforms and transform origins are kept seperately for further processing.\r\n   */\n  for (var key in latestValues) {\n    var value = latestValues[key];\n    /**\r\n     * If this is a CSS variable we don't do any further processing.\r\n     */\n    if (isCSSVariableName(key)) {\n      vars[key] = value;\n      continue;\n    }\n    // Convert the value to its default value type, ie 0 -> \"0px\"\n    var valueType = numberValueTypes[key];\n    var valueAsType = getValueAsType(value, valueType);\n    if (transformProps.has(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType;\n      // If we already know we have a non-default transform, early return\n      if (!transformIsNone) continue;\n      // Otherwise check to see if this is a default transform\n      if (value !== (valueType.default || 0)) transformIsNone = false;\n    } else if (key.startsWith(\"origin\")) {\n      // If this is a transform origin, flag and enable further transform-origin processing\n      hasTransformOrigin = true;\n      transformOrigin[key] = valueAsType;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n  if (!latestValues.transform) {\n    if (hasTransform || transformTemplate) {\n      style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n    } else if (style.transform) {\n      /**\r\n       * If we have previously created a transform but currently don't have any,\r\n       * reset transform style to none.\r\n       */\n      style.transform = \"none\";\n    }\n  }\n  /**\r\n   * Build a transformOrigin style. Uses the same defaults as the browser for\r\n   * undefined origins.\r\n   */\n  if (hasTransformOrigin) {\n    var _transformOrigin$orig = transformOrigin.originX,\n      originX = _transformOrigin$orig === void 0 ? \"50%\" : _transformOrigin$orig,\n      _transformOrigin$orig2 = transformOrigin.originY,\n      originY = _transformOrigin$orig2 === void 0 ? \"50%\" : _transformOrigin$orig2,\n      _transformOrigin$orig3 = transformOrigin.originZ,\n      originZ = _transformOrigin$orig3 === void 0 ? 0 : _transformOrigin$orig3;\n    style.transformOrigin = \"\".concat(originX, \" \").concat(originY, \" \").concat(originZ);\n  }\n}\nexport { buildHTMLStyles };","map":{"version":3,"names":["buildTransform","isCSSVariableName","transformProps","getValueAsType","numberValueTypes","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transform","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","key","value","valueType","valueAsType","has","default","startsWith","_transformOrigin$orig","originX","_transformOrigin$orig2","originY","_transformOrigin$orig3","originZ","concat"],"sources":["C:/Users/k546k/Desktop/멋쟁이사자/쉐어잇/shareit_frontend/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"],"sourcesContent":["import { buildTransform } from './build-transform.mjs';\r\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\r\nimport { transformProps } from './transform.mjs';\r\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\n\r\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\r\n    const { style, vars, transform, transformOrigin } = state;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    let hasTransform = false;\r\n    let hasTransformOrigin = false;\r\n    // Does the calculated transform essentially equal \"none\"?\r\n    let transformIsNone = true;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept seperately for further processing.\r\n     */\r\n    for (const key in latestValues) {\r\n        const value = latestValues[key];\r\n        /**\r\n         * If this is a CSS variable we don't do any further processing.\r\n         */\r\n        if (isCSSVariableName(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        // Convert the value to its default value type, ie 0 -> \"0px\"\r\n        const valueType = numberValueTypes[key];\r\n        const valueAsType = getValueAsType(value, valueType);\r\n        if (transformProps.has(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            transform[key] = valueAsType;\r\n            // If we already know we have a non-default transform, early return\r\n            if (!transformIsNone)\r\n                continue;\r\n            // Otherwise check to see if this is a default transform\r\n            if (value !== (valueType.default || 0))\r\n                transformIsNone = false;\r\n        }\r\n        else if (key.startsWith(\"origin\")) {\r\n            // If this is a transform origin, flag and enable further transform-origin processing\r\n            hasTransformOrigin = true;\r\n            transformOrigin[key] = valueAsType;\r\n        }\r\n        else {\r\n            style[key] = valueAsType;\r\n        }\r\n    }\r\n    if (!latestValues.transform) {\r\n        if (hasTransform || transformTemplate) {\r\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\r\n        }\r\n        else if (style.transform) {\r\n            /**\r\n             * If we have previously created a transform but currently don't have any,\r\n             * reset transform style to none.\r\n             */\r\n            style.transform = \"none\";\r\n        }\r\n    }\r\n    /**\r\n     * Build a transformOrigin style. Uses the same defaults as the browser for\r\n     * undefined origins.\r\n     */\r\n    if (hasTransformOrigin) {\r\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\r\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,uBAAuB;AACtD,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,cAAc,QAAQ,uCAAuC;AACtE,SAASC,gBAAgB,QAAQ,kCAAkC;AAEnE,SAASC,eAAeA,CAACC,KAAK,EAAEC,YAAY,EAAEC,OAAO,EAAEC,iBAAiB,EAAE;EACtE,IAAQC,KAAK,GAAuCJ,KAAK,CAAjDI,KAAK;IAAEC,IAAI,GAAiCL,KAAK,CAA1CK,IAAI;IAAEC,SAAS,GAAsBN,KAAK,CAApCM,SAAS;IAAEC,eAAe,GAAKP,KAAK,CAAzBO,eAAe;EAC/C;EACA,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIC,kBAAkB,GAAG,KAAK;EAC9B;EACA,IAAIC,eAAe,GAAG,IAAI;EAC1B;AACJ;AACA;AACA;AACA;AACA;EACI,KAAK,IAAMC,GAAG,IAAIV,YAAY,EAAE;IAC5B,IAAMW,KAAK,GAAGX,YAAY,CAACU,GAAG,CAAC;IAC/B;AACR;AACA;IACQ,IAAIhB,iBAAiB,CAACgB,GAAG,CAAC,EAAE;MACxBN,IAAI,CAACM,GAAG,CAAC,GAAGC,KAAK;MACjB;IACJ;IACA;IACA,IAAMC,SAAS,GAAGf,gBAAgB,CAACa,GAAG,CAAC;IACvC,IAAMG,WAAW,GAAGjB,cAAc,CAACe,KAAK,EAAEC,SAAS,CAAC;IACpD,IAAIjB,cAAc,CAACmB,GAAG,CAACJ,GAAG,CAAC,EAAE;MACzB;MACAH,YAAY,GAAG,IAAI;MACnBF,SAAS,CAACK,GAAG,CAAC,GAAGG,WAAW;MAC5B;MACA,IAAI,CAACJ,eAAe,EAChB;MACJ;MACA,IAAIE,KAAK,MAAMC,SAAS,CAACG,OAAO,IAAI,CAAC,CAAC,EAClCN,eAAe,GAAG,KAAK;IAC/B,CAAC,MACI,IAAIC,GAAG,CAACM,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC/B;MACAR,kBAAkB,GAAG,IAAI;MACzBF,eAAe,CAACI,GAAG,CAAC,GAAGG,WAAW;IACtC,CAAC,MACI;MACDV,KAAK,CAACO,GAAG,CAAC,GAAGG,WAAW;IAC5B;EACJ;EACA,IAAI,CAACb,YAAY,CAACK,SAAS,EAAE;IACzB,IAAIE,YAAY,IAAIL,iBAAiB,EAAE;MACnCC,KAAK,CAACE,SAAS,GAAGZ,cAAc,CAACM,KAAK,CAACM,SAAS,EAAEJ,OAAO,EAAEQ,eAAe,EAAEP,iBAAiB,CAAC;IAClG,CAAC,MACI,IAAIC,KAAK,CAACE,SAAS,EAAE;MACtB;AACZ;AACA;AACA;MACYF,KAAK,CAACE,SAAS,GAAG,MAAM;IAC5B;EACJ;EACA;AACJ;AACA;AACA;EACI,IAAIG,kBAAkB,EAAE;IACpB,IAAAS,qBAAA,GAA2DX,eAAe,CAAlEY,OAAO;MAAPA,OAAO,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;MAAAE,sBAAA,GAAoCb,eAAe,CAAjDc,OAAO;MAAPA,OAAO,GAAAD,sBAAA,cAAG,KAAK,GAAAA,sBAAA;MAAAE,sBAAA,GAAmBf,eAAe,CAAhCgB,OAAO;MAAPA,OAAO,GAAAD,sBAAA,cAAG,CAAC,GAAAA,sBAAA;IACrDlB,KAAK,CAACG,eAAe,MAAAiB,MAAA,CAAML,OAAO,OAAAK,MAAA,CAAIH,OAAO,OAAAG,MAAA,CAAID,OAAO,CAAE;EAC9D;AACJ;AAEA,SAASxB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}