{"ast":null,"code":"import _slicedToArray from \"C:/Users/k546k/Desktop/\\uBA4B\\uC7C1\\uC774\\uC0AC\\uC790/\\uC250\\uC5B4\\uC787/shareit_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useRef, useState, useCallback } from 'react';\nimport { wrap } from './wrap.mjs';\n\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <motion.div\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\nfunction useCycle() {\n  for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n    items[_key] = arguments[_key];\n  }\n  var index = useRef(0);\n  var _useState = useState(items[index.current]),\n    _useState2 = _slicedToArray(_useState, 2),\n    item = _useState2[0],\n    setItem = _useState2[1];\n  var runCycle = useCallback(function (next) {\n    index.current = typeof next !== \"number\" ? wrap(0, items.length, index.current + 1) : next;\n    setItem(items[index.current]);\n  }, // The array will change on each call, but by putting items.length at\n  // the front of this array, we guarantee the dependency comparison will match up\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [items.length].concat(items));\n  return [item, runCycle];\n}\nexport { useCycle };","map":{"version":3,"names":["useRef","useState","useCallback","wrap","useCycle","_len","arguments","length","items","Array","_key","index","_useState","current","_useState2","_slicedToArray","item","setItem","runCycle","next","concat"],"sources":["C:/Users/k546k/Desktop/멋쟁이사자/쉐어잇/shareit_frontend/node_modules/framer-motion/dist/es/utils/use-cycle.mjs"],"sourcesContent":["import { useRef, useState, useCallback } from 'react';\r\nimport { wrap } from './wrap.mjs';\r\n\r\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <motion.div\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\r\nfunction useCycle(...items) {\r\n    const index = useRef(0);\r\n    const [item, setItem] = useState(items[index.current]);\r\n    const runCycle = useCallback((next) => {\r\n        index.current =\r\n            typeof next !== \"number\"\r\n                ? wrap(0, items.length, index.current + 1)\r\n                : next;\r\n        setItem(items[index.current]);\r\n    }, \r\n    // The array will change on each call, but by putting items.length at\r\n    // the front of this array, we guarantee the dependency comparison will match up\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [items.length, ...items]);\r\n    return [item, runCycle];\r\n}\r\n\r\nexport { useCycle };\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACrD,SAASC,IAAI,QAAQ,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAAA,EAAW;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAPC,KAAK,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAALF,KAAK,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACtB,IAAMC,KAAK,GAAGX,MAAM,CAAC,CAAC,CAAC;EACvB,IAAAY,SAAA,GAAwBX,QAAQ,CAACO,KAAK,CAACG,KAAK,CAACE,OAAO,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA/CI,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAMI,QAAQ,GAAGhB,WAAW,CAAC,UAACiB,IAAI,EAAK;IACnCR,KAAK,CAACE,OAAO,GACT,OAAOM,IAAI,KAAK,QAAQ,GAClBhB,IAAI,CAAC,CAAC,EAAEK,KAAK,CAACD,MAAM,EAAEI,KAAK,CAACE,OAAO,GAAG,CAAC,CAAC,GACxCM,IAAI;IACdF,OAAO,CAACT,KAAK,CAACG,KAAK,CAACE,OAAO,CAAC,CAAC;EACjC,CAAC,EACD;EACA;EACA;EAAA,CACCL,KAAK,CAACD,MAAM,EAAAa,MAAA,CAAKZ,KAAK,CAAC,CAAC;EACzB,OAAO,CAACQ,IAAI,EAAEE,QAAQ,CAAC;AAC3B;AAEA,SAASd,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}