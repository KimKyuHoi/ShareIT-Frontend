{"ast":null,"code":"import { px } from '../../../value/types/numbers/units.mjs';\nconst dashKeys = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n};\nconst camelKeys = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n  // Normalise path length by setting SVG attribute pathLength to 1\n  attrs.pathLength = 1;\n  // We use dash case when setting attributes directly to the DOM node and camel case\n  // when defining props on a React component.\n  const keys = useDashCase ? dashKeys : camelKeys;\n  // Build the dash offset\n  attrs[keys.offset] = px.transform(-offset);\n  // Build the dash array\n  const pathLength = px.transform(length);\n  const pathSpacing = px.transform(spacing);\n  attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\nexport { buildSVGPath };","map":{"version":3,"names":["px","dashKeys","offset","array","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","pathLength","keys","transform","pathSpacing"],"sources":["C:/hackton/ShareIT-Frontend/shareit_frontend/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs"],"sourcesContent":["import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst dashKeys = {\r\n    offset: \"stroke-dashoffset\",\r\n    array: \"stroke-dasharray\",\r\n};\r\nconst camelKeys = {\r\n    offset: \"strokeDashoffset\",\r\n    array: \"strokeDasharray\",\r\n};\r\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\r\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\r\n    // Normalise path length by setting SVG attribute pathLength to 1\r\n    attrs.pathLength = 1;\r\n    // We use dash case when setting attributes directly to the DOM node and camel case\r\n    // when defining props on a React component.\r\n    const keys = useDashCase ? dashKeys : camelKeys;\r\n    // Build the dash offset\r\n    attrs[keys.offset] = px.transform(-offset);\r\n    // Build the dash array\r\n    const pathLength = px.transform(length);\r\n    const pathSpacing = px.transform(spacing);\r\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\r\n}\r\n\r\nexport { buildSVGPath };\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,wCAAwC;AAE3D,MAAMC,QAAQ,GAAG;EACbC,MAAM,EAAE,mBAAmB;EAC3BC,KAAK,EAAE;AACX,CAAC;AACD,MAAMC,SAAS,GAAG;EACdF,MAAM,EAAE,kBAAkB;EAC1BC,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAEC,OAAO,GAAG,CAAC,EAAEN,MAAM,GAAG,CAAC,EAAEO,WAAW,GAAG,IAAI,EAAE;EAC9E;EACAH,KAAK,CAACI,UAAU,GAAG,CAAC;EACpB;EACA;EACA,MAAMC,IAAI,GAAGF,WAAW,GAAGR,QAAQ,GAAGG,SAAS;EAC/C;EACAE,KAAK,CAACK,IAAI,CAACT,MAAM,CAAC,GAAGF,EAAE,CAACY,SAAS,CAAC,CAACV,MAAM,CAAC;EAC1C;EACA,MAAMQ,UAAU,GAAGV,EAAE,CAACY,SAAS,CAACL,MAAM,CAAC;EACvC,MAAMM,WAAW,GAAGb,EAAE,CAACY,SAAS,CAACJ,OAAO,CAAC;EACzCF,KAAK,CAACK,IAAI,CAACR,KAAK,CAAC,GAAI,GAAEO,UAAW,IAAGG,WAAY,EAAC;AACtD;AAEA,SAASR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}